@page "/"
@using System;
@using RestSharp;
@using Newtonsoft.Json.Linq;
@using Newtonsoft.Json;
@using System.Text;

@inject NavigationManager Navigation
<h3>Weather Report Request</h3>

<EditForm Model="@weatherRequest" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Address:</label>
        <InputText @bind-Value="weatherRequest.Address" />
    </div>
    <div>
        <label>PostCode:</label>
        <InputText @bind-Value="weatherRequest.PostCode" />
    </div>
    <div>
        <label>City:</label>
        <InputText @bind-Value="weatherRequest.City" />
    </div>
    <div>
        <label>Country:</label>
        <InputText @bind-Value="weatherRequest.Country" />
    </div>
    <div>
        <label>Email:</label>
        <InputText @bind-Value="weatherRequest.Email" />
    </div>
    <div>
        <label>Business:</label>
        <InputText @bind-Value="weatherRequest.Business" />
    </div>
    <div>
        <label>Name:</label>
        <InputText @bind-Value="weatherRequest.Name" />
    </div>
    <div>
        <label>Weekly:</label>
        <InputCheckbox @bind-Value="weatherRequest.Weekly" />
    </div>
    <div>
        <label>Genuine:</label>
        <InputCheckbox @bind-Value="weatherRequest.Genuine" />
    </div>

    <button type="submit">Submit</button>
</EditForm>
<p>@myText</p>
@code {
    private WeatherReportRequest weatherRequest = new WeatherReportRequest("", "", "", "", "", "", "", false, false);
    private string myText = "Not yet submitted";
    private void HandleValidSubmit()
    {
        myText = "submitted";
        start(weatherRequest);
    }

    const string ORCHESTRATOR_URL = "http://cloud.uipath.com/rosscowie/DefaultTenant/orchestrator_";
    public void start(WeatherReportRequest wrr)
    {
        string bearerToken = "Bearer rt_17DC5C7C0E4D2E3996AD9B7ECD4225CDFE958835F67AFFB15B7B7E9FE6D9A3C7-1";
        string berarer2 = "Bearer rt_9D689B912DF2D9E0F5F5F7BACE12C36F7C0F6367DA44B070BD3EAFF197CE90D3-1";

        startJob(berarer2, wrr);
    }
    public class WeatherReportRequest
    {
        public WeatherReportRequest(string address, string postcode, string city, string country, string email, string business, string name, bool weekly, bool genuine)
        {
            Weekly = weekly;
            Genuine = genuine;
            Address = address;
            PostCode = postcode;
            City = city;
            Country = country;
            Email = email;
            Name = name;
            Business = business;
        }

        public bool Weekly, Genuine;
        public string Address;
        public string PostCode;
        public string City;
        public string Country;
        public string Email;
        public string Business;
        public string Name;
    }

    private async Task startJob(string bearerToken, WeatherReportRequest report)
    {
        myText = ("Sending");
        var client = new RestClient();
        var request = new RestRequest("https://cloud.uipath.com/rosscowie/DefaultTenant/orchestrator_/t/1efae47c-61bf-4e5d-be11-4ae15d440dc7/SendWeatherReport", Method.Post);
        request.AddHeader("Authorization", bearerToken);
        request.AddHeader("Content-Type", "application/json");
        request.AddHeader("Access-Control-Allow-Origin", "*");
        var json = JsonConvert.SerializeObject(new
        {
            report.Weekly,
            Address2 = report.PostCode,
            Address1 = report.Address,
            Address3 = report.City,
            Address4 = report.Country,
            report.Name,
            BuisnessName = report.Business,
            report.Email,
            report.Genuine
        });

        var content = new StringContent(json, Encoding.UTF8, "application/json");
        request.AddJsonBody(content);

        RestResponse response = await client.ExecuteAsync(request);
        myText = (response.Content);
    }
}
